theme(legend.position = c(0.8,0.8),panel.grid = element_blank(),strip.background = element_blank())
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`))),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Total Length (bp)`,color=`Total Length (bp)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
labs(y  = "Scaffold N50", x = "Contig N50 (bp)",fill="",color="") +
theme_classic() +
theme(legend.position = c(0.8,0.2),panel.grid = element_blank(),strip.background = element_blank())
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`))),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Total Length (bp)`,color=`Total Length (bp)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
labs(y  = "Scaffold N50", x = "Contig N50 (bp)",fill="Genome Size",color="Genome Size") +
theme_classic() +
theme(legend.position = c(0.8,0.2),panel.grid = element_blank(),strip.background = element_blank())
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`))),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Total Length (bp)`,color=`Total Length (bp)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
labs(y  = "Scaffold N50", x = "Contig N50 (bp)",fill="Genome Size",color="Genome Size") +
theme_classic() +
theme(legend.position = c(0.2,0.8),panel.grid = element_blank(),strip.background = element_blank())
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
labs(y  = "Scaffold N50", x = "Contig N50 (bp)",fill="Genome Size",color="Genome Size") +
theme_classic() +
theme(legend.position = c(0.2,0.8),panel.grid = element_blank(),strip.background = element_blank())
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
labs(y  = "Scaffold N50", x = "Contig N50 (bp)",fill="Genome Size (log 10)",color="Genome Size (log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.8),panel.grid = element_blank(),strip.background = element_blank())
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
labs(y  = "Scaffold N50", x = "Contig N50 (bp)",fill="Genome Size\n(log 10)",color="Genome Size\n(log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.8),panel.grid = element_blank(),strip.background = element_blank())
library("ggsci")
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_futurama()+
scale_color_futurama()
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_material("pink")+
scale_color_material("pink")+
labs(y  = "Scaffold N50", x = "Contig N50 (bp)",fill="Genome Size\n(log 10)",color="Genome Size\n(log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.8),panel.grid = element_blank(),strip.background = element_blank())
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_material("pink")+
scale_color_material("pink")+
labs(y  = "Scaffold N50 (bp)", x = "Contig N50 (bp)",fill="Genome Size\n(log 10)",color="Genome Size\n(log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.8),panel.grid = element_blank(),strip.background = element_blank())
rm(list = ls())
# 加载所需的库
library(ggplot2)
library(reshape2)
library(readxl)
library(dplyr)
library("ggsci")
setwd("/Users/chenguangji/Desktop/02.B10K/05.丹麦鸟DBG/Plot/")
# 读取数据
data = read_excel("Plot_20240305.xlsx")
data_filter <- data %>% filter(Note=="Paper & Website")
data_filter.pub <- data %>% filter(Note=="Published")
taxo= data %>% select(c("Scientific name","Genus","Family","Order")) %>% unique.data.frame()
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_material("pink")+
scale_color_material("pink")+
labs(y  = "Scaffold N50 (bp)", x = "Contig N50 (bp)",fill="Genome Size\n(log 10)",color="Genome Size\n(log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.8),panel.grid = element_blank(),strip.background = element_blank())
ggsave("./assembly_v3_20240306.pdf",w=6.2,h=8)
ggsave("./assembly_v3_20240306.png",w=6.2,h=8)
ggsave("./assembly_v3_20240306.pdf",w=4,h=4)
ggsave("./assembly_v3_20240306.png",w=4,h=4)
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_material("pink")+
scale_color_material("pink")+
labs(y  = "Scaffold N50 (bp)", x = "Contig N50 (bp)",fill="Genome Size\n(log 10)",color="Genome Size\n(log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.6),panel.grid = element_blank(),strip.background = element_blank())
ggsave("./assembly_v3_20240306.pdf",w=4,h=4)
ggsave("./assembly_v3_20240306.png",w=4,h=4)
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (log)"=log10(`Total Length (bp)`)),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (log)`,color=`Genome Size (log)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_material("pink")+
scale_color_material("pink")+
labs(y  = "Scaffold N50 (bp)", x = "Contig N50 (bp)",fill="Genome Size\n(log 10)",color="Genome Size\n(log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.7),panel.grid = element_blank(),strip.background = element_blank())
ggsave("./assembly_v3_20240306.pdf",w=4,h=4)
ggsave("./assembly_v3_20240306.png",w=4,h=4)
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (Gb)"=(`Total Length (bp)`)/1000000000),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (Gb)`,color=`Genome Size (Gb)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_material("pink")+
scale_color_material("pink")+
labs(y  = "Scaffold N50 (bp)", x = "Contig N50 (bp)",fill="Genome Size\n(log 10)",color="Genome Size\n(log 10)") +
theme_classic() +
theme(legend.position = c(0.2,0.7),panel.grid = element_blank(),strip.background = element_blank())
ggsave("./assembly_v3_20240306.pdf",w=4,h=4)
ggsave("./assembly_v3_20240306.png",w=4,h=4)
ggplot(data_filter %>% mutate("Scaffold N50"=as.numeric(as.character(`Scaffold N50`)), "Genome Size (Gb)"=(`Total Length (bp)`)/1000000000),
aes(y=`Scaffold N50`,x=`Contig N50`,fill=`Genome Size (Gb)`,color=`Genome Size (Gb)`))+
geom_point(size=1)+
# geom_line()+
# facet_grid(variable~.,scales = "free_y")+
scale_y_log10(labels = scales::label_log(base = 10,digits=2))+
scale_x_log10(labels = scales::label_log(base = 10,digits=2))+
scale_fill_material("pink")+
scale_color_material("pink")+
labs(y  = "Scaffold N50 (bp)", x = "Contig N50 (bp)",fill="Genome Size\n(Gb)",color="Genome Size\n(Gb)") +
theme_classic() +
theme(legend.position = c(0.2,0.75),panel.grid = element_blank(),strip.background = element_blank())
ggsave("./assembly_v3_20240306.pdf",w=4,h=4)
ggsave("./assembly_v3_20240306.png",w=4,h=4)
rm(list = ls())
require("writexl")
library("dplyr",quietly=T)
library("ggplot2",quietly = T)
library("ggpubr",quietly = T)
library("grid",quietly = T)
library("ggsci",quietly = T)
library("ggtree",quietly = T)
library("ggnewscale",quietly = T)
library("ggtreeExtra",quietly = T)
library("ggstance",quietly = T)
library("aplot",quietly = T)
library("reshape2",quietly = T)
library("ape",quietly = T)
library("RColorBrewer",quietly = T)
library("ggsignif",quietly = T)
library("nlme",quietly = T)
library("phylolm",quietly = T)
library("caper",quietly = T)
library("phytools",quietly = T)
library("geiger",quietly = T)
library("gvlma",quietly = T)
require("ggfun")
require("patchwork")
library("plotly")
require(rr2)
# library("missForest",quietly = T)
set.seed(1234)
#wd
setwd("/Users/chenguangji/Desktop/05.内源性病毒/LTR/Solo-LTR_report/Solo-Final") # macOS
# load("tmp.RData")
# setwd("F:/Solo-LTR/Solo-LTR_report/Solo-Final") # windows
#Data
##treeData
Aves.Or = read.tree("data/tree/Aves.Order.nh")
Aves.Sp.raw = read.tree("data/tree/Aves.Species.nh")
Aves.Sp = drop.tip(Aves.Sp.raw,"FICALB")
# Aves.Sp.reroot = reroot(Aves.Sp,getMRCA(Aves.Sp,c("QUIMEX","STROCC")))
Aves.Sp.reroot = Aves.Sp
Aves.Sp.reroot$node.label<-NULL
All.Or = read.tree("data/tree/Aves.Order.Outgroup.Order.nh")
All.Sp.raw = read.tree("data/tree/Aves.Species.Outgroup.Species.nh")
All.Sp = drop.tip(All.Sp.raw,"FICALB")
Aves.Or.Out.Sp = read.tree("data/tree/Aves.Order.Outgroup.Species.nh")
##metaData
metaData = read.table("data/tree/Meta.Data.txt",sep="\t",header = T)
##OtherInfo
fasize = read.table("data/Solo-LTR/ALL.fasize.txt",header = F,col.names=c("id","size","fasize"))
fasize.20k = merge(metaData,fasize %>% filter(size=="20k"),by.x="ID",by.y = "id") %>% dplyr::select(c("Tree.name","clade","fasize"))
count.tag <- c("paired-count","solo-count")
relative.length.tag <- c("paired-relative-length","solo-relative-length")
##HRF.Info
HRF.info<-read.table("data/HRF/all.HRF.stat",header = T)
names(HRF.info)[1]="Tree.name"
HRF.info$Tree.name<-gsub("-","_",HRF.info$Tree.name)
##ReTe.Info
ReTe.info<-read.table("data/ERV/ERV_total_Transcriptome.11_30_11_47_25.stat",header = T)
# ##ERV.diversity.Info
# ERV.diver.Env<-melt(read.table("data/ERV/Env.All.ReTe.result.ReDup.pep.cdhit.clstr.result",sep=",",header = T))
# ERV.diver.Env$protein="Env"
# ERV.diver.Gag<-melt(read.table("data/ERV/Gag.All.ReTe.result.ReDup.pep.cdhit.clstr.result",sep=",",header = T))
# ERV.diver.Gag$protein="Gag"
# ERV.diver.Pol<-melt(read.table("data/ERV/Pol.All.ReTe.result.ReDup.pep.cdhit.clstr.result",sep=",",header = T))
# ERV.diver.Pol$protein="Pol"
# ERV.diver.Pro<-melt(read.table("data/ERV/Pro.All.ReTe.result.ReDup.pep.cdhit.clstr.result",sep=",",header = T))
# ERV.diver.Pro$protein="Pro"
#
# ERV.diver.Env.v2<-melt(read.table("data/ERV/Env.All.ReTe.result.ReDup.pep.cdhit.clstr.result.v2",sep=",",header = T))
# ERV.diver.Env.v2$protein="Env"
# ERV.diver.Gag.v2<-melt(read.table("data/ERV/Gag.All.ReTe.result.ReDup.pep.cdhit.clstr.result.v2",sep=",",header = T))
# ERV.diver.Gag.v2$protein="Gag"
# ERV.diver.Pol.v2<-melt(read.table("data/ERV/Pol.All.ReTe.result.ReDup.pep.cdhit.clstr.result.v2",sep=",",header = T))
# ERV.diver.Pol.v2$protein="Pol"
# ERV.diver.Pro.v2<-melt(read.table("data/ERV/Pro.All.ReTe.result.ReDup.pep.cdhit.clstr.result.v2",sep=",",header = T))
# ERV.diver.Pro.v2$protein="Pro"
##LTR.otherInfo
LTR.Others <- c("Copia","Caulimovirus","DIRS","Ngaro","Viper","LTR","-")
LTR.levels <- c("Gypsy","Pao","ERV","ERV1","ERV4","ERVL","ERVK","ERVL-MaLR","ERV-Lenti","Others")
LTR.care.detail <- c("Gypsy","Pao","ERV","ERV1","ERV4","ERVL","ERVK","ERVL-MaLR","ERV-Lenti")
LTR.test.detail <- c("Gypsy","Pao","ERV1","ERV4","ERVL","ERVK","ERVL-MaLR")
#Solo-LTR
## Solo-LTR length
LTR_length <- read.table("data/Solo-LTR/ALL.LTR_length.txt",header = T)
LTR_length.m <- merge(LTR_length, metaData, by.x = "id", by.y = "ID")
LTR_length.m$detail <- ifelse(LTR_length.m$detail %in% LTR.Others ,"Others",LTR_length.m$detail)
LTR_length.m$detail <- factor(LTR_length.m$detail, levels = LTR.levels )
#LTR_length.m.sub <- subset(LTR_length.m, LTR_length.m$value!=0)
##traitData
# traitData <- read.table("data/trait/B10K_Full_Trait_Data_Draft-edit.txt",header = T,sep="\t")
traitData <- as_tibble(read.csv("data/trait/New_version_trait/TraitData_v3_missForest_log10.csv",header = T))
# traitData$Dev_Mod<-factor(traitData$Dev_Mod,levels=c("altricial","semi","precocial"))
traitData$Habitat<-factor(traitData$Habitat,levels=c("Desert","Rock","Riverine","Coastal","Marine","Grassland","Wetland","Shrubland","Woodland","Forest","Human Modified"))
traitData$Habitat_Density<-factor(traitData$Habitat_Density,levels=c("dense","semi","open"))
traitData$Migration<-factor(traitData$Migration,levels=c("sedentary","migratory"))
traitData$Trophic_Level<-factor(traitData$Trophic_Level,levels=c("Herbivore","Omnivore","Carnivore","Scavenger"))
traitData$Primary_Lifestyle<-factor(traitData$Primary_Lifestyle,levels=c("Insessorial","Terrestrial","Aquatic","Aerial","Generalist"))
traitData$Nest_Structure<-factor(traitData$Nest_Structure,levels=c("Plate","Bowl","Cup"))
Trait.name=names(traitData)[4:dim(traitData)[2]]
# Trait.name.one = paste(collapse = ",",names(traitData)[1:length(names(traitData))-1])
# Trait.name.start=12
# lambda<-seq(1,0,by=-0.01)
# lambda.df<-data.frame(matrix(vector(), 0, 4,dimnames=list(c(), c("Type","remove_trait","lambda","method"))),stringsAsFactors=F)
# PSTest.out = data.frame(matrix(vector(), 0, 8,
#                 dimnames=list(c(), c("Type","K","P","lambda","P","Group","T-test","phyloANOVA"))),
#                 stringsAsFactors=F)
# names(PSTest.out)=c("Type","K","P","lambda","P","Group","T-test","phyloANOVA")
#
# traitTest.cor.out = data.frame(matrix(vector(), 0, 13,
#                 dimnames=list(c(), c("Type","trait","Num","R(Pearson)","P-value(Pearson)","AIC(PGLS)","lambda(PGLS)","lambda(lower-95%)","lambda(upper-95%)","Estimate(PGLS)","Std.Error(PGLS)","t value(PGLS)","P-value(PGLS)"))),
#                 stringsAsFactors=F)
# names(traitTest.cor.out)<-c("Type","trait","Num","R(Pearson)","P-value(Pearson)","AIC(PGLS)","lambda(PGLS)","lambda(lower-95%)","lambda(upper-95%)","Estimate(PGLS)","Std.Error(PGLS)","t value(PGLS)","P-value(PGLS)")
### Avian Species plot
Aves.Sp.clade <- merge(as.data.frame(Aves.Sp$tip.label),metaData, by.x="Aves.Sp$tip.label", by.y="Tree.name",sort = F)
names(Aves.Sp.clade)[1]<-"tip.label"
Aves.Sp.groupinfo<-split(Aves.Sp.clade$tip.label,Aves.Sp.clade$Order)
Aves.Sp <- groupOTU(Aves.Sp,Aves.Sp.groupinfo,"Clade")
p.Aves.Sp<-ggtree(Aves.Sp,aes(color=Clade),ladderize = T,branch.length="none")+theme(legend.position = "none")+scale_color_manual(values=c("gray",colorRampPalette(pal_npg("nrc", alpha = 0.7)(10))(37)))+scale_y_reverse()
### All Species plot
All.Sp.clade <- merge(as.data.frame(All.Sp$tip.label),metaData, by.x="All.Sp$tip.label", by.y="Tree.name",sort = F)
names(All.Sp.clade)[1]<-"tip.label"
All.Sp.groupinfo<-split(All.Sp$tip.label,All.Sp.clade$clade)
All.Sp <- groupOTU(All.Sp,All.Sp.groupinfo,"Clade")
p.All.Sp<-ggtree(All.Sp,aes(color=Clade),ladderize = T,branch.length="none")+theme(legend.position = "none")+scale_color_manual(values=c("gray","#E64B35","#4DBBD5","#6a3d9a"))+scale_y_reverse()+
geom_strip("QUIMEX","STRCAM",barsize = 2,color="#E64B35",label="Aves",
offset=1, offset.text = 1,hjust = 0,extend=.4)+
geom_strip("Sphenodon_punctatus","Alligator_mississippiensis",barsize = 2,color="#6a3d9a",label="Reptilia",
offset=1, offset.text = 1,hjust = 0,extend=.4)+
geom_strip("Monodelphis_domestica","Mus_musculus",barsize = 2,color="#4DBBD5",label="Mammalia",
offset=1, offset.text = 1,hjust = 0,extend=.4)
### Avian Order + Outgroup Species Plot
Aves.Or.Out.Sp1 <- merge(as.data.frame(Aves.Or.Out.Sp$tip.label),metaData, by.x="Aves.Or.Out.Sp$tip.label", by.y="Order",sort = F)
Aves.Or.Out.Sp2 <- merge(as.data.frame(Aves.Or.Out.Sp$tip.label),metaData, by.x="Aves.Or.Out.Sp$tip.label", by.y="Tree.name",sort = F)
Aves.Or.Out.Sp.groupinfo.df<-unique.data.frame(data.frame(tip.label = c(Aves.Or.Out.Sp1[,1],Aves.Or.Out.Sp2[,1]),
clade = c(Aves.Or.Out.Sp1[,3],Aves.Or.Out.Sp2[,3])))
Aves.Or.Out.Sp.groupinfo<-split(Aves.Or.Out.Sp.groupinfo.df$tip.label,Aves.Or.Out.Sp.groupinfo.df$clade)
Aves.Or.Out.Sp <- groupOTU(Aves.Or.Out.Sp,Aves.Or.Out.Sp.groupinfo,"Clade")
p.Aves.Or.Out.Sp<-ggtree(Aves.Or.Out.Sp,aes(color=Clade),ladderize = F,branch.length="none")+theme(legend.position = "none")+scale_color_manual(values=c("gray","#E64B35","#4DBBD5","#6a3d9a"))+scale_y_reverse()+ #geom_tiplab()+
geom_strip("Passeriformes","Struthioniformes",barsize = 2,color="#E64B35",label="Aves",
offset=1, offset.text = .5,hjust = 0,extend=.4)+
geom_strip("Sphenodon_punctatus","Alligator_mississippiensis",barsize = 2,color="#6a3d9a",label="Reptilia",
offset=1, offset.text = .5,hjust = 0,extend=.4)+
geom_strip("Monodelphis_domestica","Mus_musculus",barsize = 2,color="#4DBBD5",label="Mammalia",
offset=1, offset.text = .5,hjust = 0,extend=.4)
### All Order Plot
All.Or.clade <- merge(as.data.frame(All.Or$tip.label),metaData, by.x="All.Or$tip.label", by.y="Order",sort = F)
names(All.Or.clade)[1]<-"tip.label"
All.Or.clade.groupinfo<-split(All.Or.clade$tip.label,All.Or.clade$clade)
All.Or <- groupOTU(All.Or,All.Or.clade.groupinfo,"Clade")
p.All.Or<-ggtree(All.Or,aes(color=Clade),ladderize = F,branch.length="none")+theme(legend.position = "none")+scale_color_manual(values=c("gray","#E64B35","#4DBBD5","#6a3d9a"))+scale_y_reverse()
### Raw Aves Sp Plot
Aves.Sp.raw.clade <- merge(as.data.frame(Aves.Sp.raw$tip.label),metaData, by.x="Aves.Sp.raw$tip.label", by.y="Tree.name",sort = F)
names(Aves.Sp.raw.clade)[1]<-"tip.label"
Aves.Sp.raw.groupinfo<-split(Aves.Sp.raw.clade$tip.label,Aves.Sp.raw.clade$Order)
Aves.Sp.raw <- groupOTU(Aves.Sp.raw,Aves.Sp.raw.groupinfo,"Clade")
p.Aves.Sp.raw<-ggtree(Aves.Sp.raw,aes(color=Clade),ladderize = T,branch.length="none")+
scale_color_manual(guide="none",values=c("gray",colorRampPalette(pal_npg("nrc", alpha = 0.7)(10))(37)))+scale_y_reverse()
# All.Sp.raw
### Raw All  Sp Plot
All.Sp.raw.clade <- merge(as.data.frame(All.Sp.raw$tip.label),metaData, by.x="All.Sp.raw$tip.label", by.y="Tree.name",sort = F)
names(All.Sp.raw.clade)[1]<-"tip.label"
All.Sp.raw.groupinfo<-split(All.Sp.raw.clade$tip.label,All.Sp.raw.clade$clade)
All.Sp.raw <- groupOTU(All.Sp.raw,All.Sp.raw.groupinfo,"Clade")
p.All.Sp.raw<-ggtree(All.Sp.raw,aes(color=Clade),ladderize = T,branch.length="none")+
scale_color_manual(guide="none",values=c("gray","#E64B35","#4DBBD5","#6a3d9a"))+scale_y_reverse()
### Pass.Sp
Pass.Sp<-extract.clade(Aves.Sp.raw, getMRCA(Aves.Sp.raw,c("ACACHL","QUIMEX")), root.edge = 0, collapse.singles = TRUE,interactive = FALSE)
Pass.metaData<-metaData %>% filter(Order=="Passeriformes")
Pass_Super<-read.table("data/tree/Passeriformes_Superfamily.txt",header = T,sep="\t")
names(Pass_Super)[1]="label"
Pass.Sp.df<-data.frame(label=Pass.Sp$tip.label)
Pass.Sp.df.m<-merge(Pass.Sp.df,Pass_Super,sort = F)
### All.aves
All.aves<-read.tree("data/tree/all.10k.aves.tre")
### Passerides
Passerides.sp<-keep.tip(Aves.Sp.raw,(Pass.Sp.df.m %>% filter(Infraorder=="Passerides"))$label)
Passerides.sp$node.label<-NULL
LTR_length.m$value<-as.numeric(as.character(LTR_length.m$value))
LTR_length.m$type=ifelse(LTR_length.m$detail %in% LTR.Others,"Qualified","Others")
LTR_relative_length.m<-subset(LTR_length.m,LTR_length.m$tag %in% relative.length.tag)
LTR_relative_length.m.stat.ps<-melt(tapply(as.numeric(as.character(LTR_relative_length.m$value)),list(LTR_relative_length.m$id, LTR_relative_length.m$cutoff, LTR_relative_length.m$tag, LTR_relative_length.m$detail),sum))
LTR_relative_length.m.stat.total<-melt(tapply(as.numeric(as.character(LTR_relative_length.m$value)),list(LTR_relative_length.m$id, LTR_relative_length.m$cutoff, LTR_relative_length.m$detail),sum))
names(LTR_relative_length.m.stat.total)[3]="Var4"
LTR_relative_length.m.stat<-merge(LTR_relative_length.m.stat.ps,LTR_relative_length.m.stat.total,by=c("Var1","Var2","Var4"))
names(LTR_relative_length.m.stat)<-c("id","cutoff","detail","tag","detail.r.length","detail.t.length")
LTR_relative_length.m.stat$ratio<-LTR_relative_length.m.stat$detail.r.length/LTR_relative_length.m.stat$detail.t.length*100
LTR_relative_length.m.stat<-merge(LTR_relative_length.m.stat,metaData,by.x = "id", by.y = "ID")
#LTR_relative_length.m.stat total detail info
LTR_relative_length.m.stat.ps <- melt(tapply(as.numeric(as.character(LTR_relative_length.m.stat$detail.r.length)),list(LTR_relative_length.m.stat$id,LTR_relative_length.m.stat$cutoff,LTR_relative_length.m.stat$tag),sum,na.rm=TRUE))
LTR_relative_length.m.stat.total <- melt(tapply(as.numeric(as.character(LTR_relative_length.m.stat$detail.t.length)),list(LTR_relative_length.m.stat$id,LTR_relative_length.m.stat$cutoff,LTR_relative_length.m.stat$tag),sum,na.rm=TRUE))
LTR_relative_length.m.stat.overall <- merge(LTR_relative_length.m.stat.ps,LTR_relative_length.m.stat.total,by=c("Var1","Var2","Var3"))
names(LTR_relative_length.m.stat.overall)<-c("id","cutoff","tag","r.length","t.length")
LTR_relative_length.m.stat.overall$ratio<-LTR_relative_length.m.stat.overall$r.length/LTR_relative_length.m.stat.overall$t.length*100
LTR_relative_length.m.stat.overall<-merge(LTR_relative_length.m.stat.overall,metaData,by.x = "id", by.y = "ID")
#LTR_relative_length.m.stat.overall overall info
LTR_relative_length.m.stat.Q <- LTR_relative_length.m.stat %>% filter(tag %in% relative.length.tag) %>% filter(detail %in% LTR.care.detail)
#LTR_relative_length.m.stat.Q total Qulified LTR detail info
LTR_relative_length.m.stat.Q.ps <- melt(tapply(as.numeric(as.character(LTR_relative_length.m.stat.Q$detail.r.length)),list(LTR_relative_length.m.stat.Q$id,LTR_relative_length.m.stat.Q$cutoff,LTR_relative_length.m.stat.Q$tag),sum,na.rm=TRUE))
LTR_relative_length.m.stat.Q.total <- melt(tapply(as.numeric(as.character(LTR_relative_length.m.stat.Q$detail.t.length)),list(LTR_relative_length.m.stat.Q$id,LTR_relative_length.m.stat.Q$cutoff,LTR_relative_length.m.stat.Q$tag),sum,na.rm=TRUE))
LTR_relative_length.m.stat.Q.overall <- merge(LTR_relative_length.m.stat.Q.ps,LTR_relative_length.m.stat.Q.total,by=c("Var1","Var2","Var3"))
names(LTR_relative_length.m.stat.Q.overall)<-c("id","cutoff","tag","r.length","t.length")
LTR_relative_length.m.stat.Q.overall$ratio<-LTR_relative_length.m.stat.Q.overall$r.length/LTR_relative_length.m.stat.Q.overall$t.length*100
LTR_relative_length.m.stat.Q.overall<-merge(LTR_relative_length.m.stat.Q.overall,metaData,by.x = "id", by.y = "ID")
#LTR_relative_length.m.stat.Q.overall Qulified LTR overall info
### Total Solo LTR
Total_solo_20k85 <- LTR_relative_length.m.stat.Q.overall %>% filter(tag=="solo-relative-length") %>% filter(cutoff=="20k_&&_85_indentity") %>% filter(clade=="Aves")
Total_solo_20k85.sub<-subset(Total_solo_20k85,select = c("Tree.name","Order","Family","r.length"))
row.names(Total_solo_20k85.sub)<-Total_solo_20k85.sub$Tree.name
### ERVK
ERVK_solo_20k85 <- LTR_relative_length.m.stat.Q %>% filter(tag=="solo-relative-length") %>% filter(cutoff=="20k_&&_85_indentity") %>% filter(clade=="Aves") %>% filter(detail=="ERVK")
ERVK_solo_20k85.sub<-subset(ERVK_solo_20k85,select = c("Tree.name","Order","Family","detail.r.length"))
row.names(ERVK_solo_20k85.sub)<-ERVK_solo_20k85.sub$Tree.name
### ERVL
ERVL_solo_20k85 <- LTR_relative_length.m.stat.Q %>% filter(tag=="solo-relative-length") %>% filter(cutoff=="20k_&&_85_indentity") %>% filter(clade=="Aves") %>% filter(detail=="ERVL")
ERVL_solo_20k85.sub<-subset(ERVL_solo_20k85,select = c("Tree.name","Order","Family","detail.r.length"))
row.names(ERVL_solo_20k85.sub)<-ERVL_solo_20k85.sub$Tree.name
### ERV1
ERV1_solo_20k85 <- LTR_relative_length.m.stat.Q %>% filter(tag=="solo-relative-length") %>% filter(cutoff=="20k_&&_85_indentity") %>% filter(clade=="Aves") %>% filter(detail=="ERV1")
ERV1_solo_20k85.sub<-subset(ERV1_solo_20k85,select = c("Tree.name","Order","Family","detail.r.length"))
row.names(ERV1_solo_20k85.sub)<-ERV1_solo_20k85.sub$Tree.name
### ERV4
ERV4_solo_20k85 <- LTR_relative_length.m.stat.Q %>% filter(tag=="solo-relative-length") %>% filter(cutoff=="20k_&&_85_indentity") %>% filter(clade=="Aves") %>% filter(detail=="ERV4")
ERV4_solo_20k85.sub<-subset(ERV4_solo_20k85,select = c("Tree.name","Order","Family","detail.r.length"))
row.names(ERV4_solo_20k85.sub)<-ERV4_solo_20k85.sub$Tree.name
### Bel/Pao
Pao_solo_20k85 <- LTR_relative_length.m.stat.Q %>% filter(tag=="solo-relative-length") %>% filter(cutoff=="20k_&&_85_indentity") %>% filter(clade=="Aves") %>% filter(detail=="Pao")
Pao_solo_20k85.sub<-subset(Pao_solo_20k85,select = c("Tree.name","Order","Family","detail.r.length"))
row.names(Pao_solo_20k85.sub)<-Pao_solo_20k85.sub$Tree.name
### Ty3/Gypsy
Gypsy_solo_20k85 <- LTR_relative_length.m.stat.Q %>% filter(tag=="solo-relative-length") %>% filter(cutoff=="20k_&&_85_indentity") %>% filter(clade=="Aves") %>% filter(detail=="Gypsy")
Gypsy_solo_20k85.sub<-subset(Gypsy_solo_20k85,select = c("Tree.name","Order","Family","detail.r.length"))
row.names(Gypsy_solo_20k85.sub)<-Gypsy_solo_20k85.sub$Tree.name
### merge
merge_solo_20k85<-rbind.data.frame(Total_solo_20k85 %>% mutate(type="Total Solo-LTR",detail.r.length=r.length) %>% dplyr::select(c("Tree.name","Order","Family","detail.r.length","type")),
Gypsy_solo_20k85.sub %>% mutate(type="Ty3/Gypsy"),Pao_solo_20k85.sub %>% mutate(type="Bel/Pao"),ERV1_solo_20k85.sub %>% mutate(type="ERV1"),
ERV4_solo_20k85.sub %>% mutate(type="ERV4"),ERVL_solo_20k85.sub  %>% mutate(type="ERVL"),ERVK_solo_20k85.sub %>% mutate(type="ERVK"))
merge_solo_20k85$type<-factor(merge_solo_20k85$type,levels = c("Total Solo-LTR","Ty3/Gypsy","Bel/Pao","ERV1","ERV4","ERVL","ERVK"))
p.merge.S.Aves<-
ggplot(data = merge_solo_20k85 %>% filter(type %in% c("Ty3/Gypsy","Bel/Pao","ERV1","ERV4","ERVL")),
aes(x=Tree.name, y=detail.r.length)) +
geom_point(aes(color=Order),size=0.3)+
geom_line(aes(group=Order,color=Order)) +
coord_flip() + theme_tree2() + labs(caption = "cutoff = 20k_&&_85_indentity",y="Solo-LTR length (relative to genome size) (unit:%)") +
# scale_color_manual(values=colorRampPalette(pal_npg("nrc", alpha = 0.7)(10))(13))+
theme(legend.position='none',axis.text.x =element_text(angle = 45,vjust = 0.5, hjust = 0.5)) +
geom_vline(aes(xintercept = 217.5),linetype="longdash",color="gray",alpha=0.8)+
geom_vline(aes(xintercept = 190.5),linetype="longdash",color="gray",alpha=0.8)+
geom_vline(aes(xintercept = 19.5),linetype="longdash",color="gray",alpha=0.8)+
geom_vline(aes(xintercept = 259.5),linetype="longdash",color="gray",alpha=0.8) +
geom_vline(aes(xintercept = 321.5),linetype="longdash",color="gray",alpha=0.8) +
facet_grid(.~type,scales = "free_x")+theme(strip.background=element_rect(fill=NA,color=NA))
p.merge.S.Aves %>% insert_left(p.Aves.Sp +
geom_hline(aes(yintercept = 321.5),linetype="longdash",color="gray",alpha=0.8) +
geom_hline(aes(yintercept = 259.5),linetype="longdash",color="gray",alpha=0.8) +
geom_hline(aes(yintercept = 217.5),linetype="longdash",color="gray",alpha=0.8)+
geom_hline(aes(yintercept = 190.5),linetype="longdash",color="gray",alpha=0.8)+
geom_hline(aes(yintercept = 19.5),linetype="longdash",color="gray",alpha=0.8)+
geom_strip("CHATOR","QUIMEX",barsize = 1.2,color="#66c2a5",label="Neognathae",offset=2, offset.text = 5, hjust = 0,extend = .4)+
geom_strip("CRYUND","STRCAM",barsize = 1.2,color="#d95f02",label="Palaeognathae",offset=2, offset.text = 3, hjust = 0,extend = .4)+
geom_strip("ATRCLA","QUIMEX",barsize = 0.9,color="#2c7fb8",label="Passeri",offset=8, offset.text = 5, hjust = 0,extend = .4, fontsize=3)+
geom_strip("CNELOR","QUIMEX",barsize = 0.9,color="deepskyblue4",label="Passerides",offset=11, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("PROCAF","QUIMEX",barsize = 0.9,color="dodgerblue4",label="Passerida",offset=14, offset.text = 2, hjust = 0,extend = .4, fontsize=3)+
geom_strip("ACACHL","QUIMEX",barsize = 1,color="#00A8EE",label="Passeriformes",offset=5, offset.text = 8, hjust = 0,extend = .4, fontsize=3)+
geom_strip("SEMFRA","BUCCAP",barsize = 1,color="#847AFF",label="Piciformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("BUCRHI","UPUEPO",barsize = 1,color="#D37700",label="Bucerotiformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("ALELAT","TYMCUP",barsize = 1,color="#29B455",label="Galliformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("CHATOR","ANAZON",barsize = 1,color="#E7663E",label="Anseriformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("NYCLEU","OREMEL",barsize = 1,color="#C67F00",label="Caprimulgiformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
geom_strip("BURBIS","LARSMI",barsize = 1,color="#9A9300",label="Charadriiformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
geom_strip("CICMAG","NANBRA",barsize = 1,color="#1D9AFF",label="Pelecaniformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
geom_strip("CATAUR","SPITYR",barsize = 1,color="#EF5D59",label="Accipitriformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
xlim(0,88),
width = 0.25)
remove.packages("ggplot2")
?install.packages()
require(devtools)
install_version("'ggplot2"， version = "3.4.4"， repos = "http://cran.us.r-project.org")
install_version("ggplot2"， version = "3.4.4"， repos = "http://cran.us.r-project.org")
install_version("ggplot2",version = "3.4.4",repos = "http://cran.us.r-project.org")
# Figure 1B
rm(list = ls())
#wd
setwd("/Users/chenguangji/Desktop/05.内源性病毒/LTR/Solo-LTR_report/Solo-Final") # macOS
require("writexl")
require("readxl")
library("dplyr",quietly=T)
library("ggplot2",quietly = T)
library("ggtree",quietly = T)
library("aplot")
setwd("Source_Data/Figure_2/Figure_2A/")
ERVK_proportion<-read_excel("Figure_2A.xlsx")
Aves.Sp<-read.tree("Figure_2A.tre")
Aves.Sp.groupinfo<-split(ERVK_proportion$Tree.name,ERVK_proportion$Order)
Aves.Sp <- groupOTU(Aves.Sp,Aves.Sp.groupinfo,"Clade")
p.Aves.Sp<-ggtree(keep.tip(Aves.Sp,ERVK_proportion$Tree.name),aes(color=Clade),ladderize = T,branch.length="none")+
theme(legend.position = "none")+
scale_color_manual(values=c("gray",colorRampPalette(pal_npg("nrc", alpha = 0.7)(10))(37)))+scale_y_reverse()+
geom_hline(aes(yintercept = 321.5),linetype="longdash",color="gray",alpha=0.8) +
geom_hline(aes(yintercept = 259.5),linetype="longdash",color="gray",alpha=0.8) +
geom_hline(aes(yintercept = 217.5),linetype="longdash",color="gray",alpha=0.8)+
geom_hline(aes(yintercept = 190.5),linetype="longdash",color="gray",alpha=0.8)+
geom_hline(aes(yintercept = 19.5),linetype="longdash",color="gray",alpha=0.8)+
geom_strip("CHATOR","QUIMEX",barsize = 1.2,color="#66c2a5",label="Neognathae",offset=2, offset.text = 5, hjust = 0,extend = .4)+
geom_strip("CRYUND","STRCAM",barsize = 1.2,color="#d95f02",label="Palaeognathae",offset=2, offset.text = 3, hjust = 0,extend = .4)+
geom_strip("ATRCLA","QUIMEX",barsize = 0.9,color="#2c7fb8",label="Passeri",offset=8, offset.text = 5, hjust = 0,extend = .4, fontsize=3)+
geom_strip("CNELOR","QUIMEX",barsize = 0.9,color="deepskyblue4",label="Passerides",offset=11, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("PROCAF","QUIMEX",barsize = 0.9,color="dodgerblue4",label="Passerida",offset=14, offset.text = 2, hjust = 0,extend = .4, fontsize=3)+
geom_strip("ACACHL","QUIMEX",barsize = 1,color="#00A8EE",label="Passeriformes",offset=5, offset.text = 8, hjust = 0,extend = .4, fontsize=3)+
geom_strip("SEMFRA","BUCCAP",barsize = 1,color="#847AFF",label="Piciformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("BUCRHI","UPUEPO",barsize = 1,color="#D37700",label="Bucerotiformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("ALELAT","TYMCUP",barsize = 1,color="#29B455",label="Galliformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("CHATOR","ANAZON",barsize = 1,color="#E7663E",label="Anseriformes",offset=5, offset.text = 3, hjust = 0,extend = .4, fontsize=3)+
geom_strip("NYCLEU","OREMEL",barsize = 1,color="#C67F00",label="Caprimulgiformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
geom_strip("BURBIS","LARSMI",barsize = 1,color="#9A9300",label="Charadriiformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
geom_strip("CICMAG","NANBRA",barsize = 1,color="#1D9AFF",label="Pelecaniformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
geom_strip("CATAUR","SPITYR",barsize = 1,color="#EF5D59",label="Accipitriformes",offset=5, offset.text = 3, hjust = 0,extend = .4,fontsize=3)+
xlim(0,88)
### Figure_2A
p.Figure_2A.pre<-ggplot(data = ERVK_proportion,
aes(x=Tree.name, y=detail.r.length)) +
geom_point(aes(color=Order),size=0.3)+
geom_line(aes(group=Order,color=Order)) +
coord_flip() + theme_tree2() +
labs(caption = "cutoff = 20k_&&_85_indentity",y="Proportion (Unit:%)") +
theme(legend.position='none',axis.text.x =element_text(angle = 45,vjust = 0.5, hjust = 0.5)) +
geom_vline(aes(xintercept = 217.5),linetype="longdash",color="gray",alpha=0.8)+
geom_vline(aes(xintercept = 190.5),linetype="longdash",color="gray",alpha=0.8)+
geom_vline(aes(xintercept = 19.5),linetype="longdash",color="gray",alpha=0.8)+
geom_vline(aes(xintercept = 259.5),linetype="longdash",color="gray",alpha=0.8) +
geom_vline(aes(xintercept = 321.5),linetype="longdash",color="gray",alpha=0.8)+
theme(strip.background=element_rect(fill=NA,color=NA))
# p.Figure_2A<-
p.Figure_2A.pre %>% insert_left(p.Aves.Sp,width = 0.25)
